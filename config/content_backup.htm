<h1>W1</h1>
<p><span>下載 Download Windows x86-64 executable installer 準備安裝 3.8.2 python 解譯器,下載 full 64-bit download, 解開壓縮檔案, 就是可以直接執行的 Scite.exe 編輯器,將安裝的 Python38 目錄以及 Scite 目錄搬入 c:\wcm2020\data 目錄中, 然後藉由Scite.exe</span><span>建立 stop.bat 與 start.bat</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/O-5uZBOdDtY" width="560"></iframe></p>
<h1>W2-W4</h1>
<p><span>利用 get-pip.py 在 W1 所完成的</span><span>可擕系統安裝 pip,後設定 start.bat和pacman.conf和wgetrc 等兩個檔案,修改完成後, 重新開啟 msys64 目錄下的 mingw64.exe 後, 就可以透過 IPv6 的 proxy server 執行 package 更新</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/63efZ6iKihE" width="560"></iframe></p>
<h1>W6</h1>
<p><span>準備一個 webcam，以應後續 online 上課及拍攝操作影片所需,都能在 YouTube 直播加上OBS 串流模式下，將電腦桌面疊上直播者的 webcam 畫面製作</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/eoyLP7Sa8cs" width="560"></iframe></p>
<h1>W7</h1>
<p>用meet <span>testing 進行線上直播,</span></p>
<h1>W8</h1>
<p><span>用meet </span><span>testing 進行線上直播,</span></p>
<h1>W9</h1>
<p>期中考</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/bw02t8-K0SY" width="560"></iframe></p>
<h1>W10</h1>
<p>介紹PYTHON 程式</p>
<h1>W11</h1>
<p>建立ssh</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/BfReeoUSCHE" width="560"></iframe></p>
<p>1. 下載 Putty 工具組</p>
<p style="padding-left: 30px;"><span>從 </span><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/" rel="nofollow">https://www.chiark.greenend.org.uk/~sgtatham/putty/</a><span><span> </span>下載一般版, 或從<span> </span></span><a href="http://jakub.kotrla.net/putty/" rel="nofollow">http://jakub.kotrla.net/putty/</a><span><span> </span>下載特殊的可攜版本.</span></p>
<p><span>2. 利用 y:\portablegit\bin\sh.exe 進入 shell 命令環境後, 以 </span></p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false"> ssh-keygen -t rsa -b 4096 -C "使用者學號"</pre>
<p style="padding-left: 30px;">在 /y/home/.ssh 目錄下建立 id_rsa 與 id_rsa.pub 等 private key 與 public key</p>
<p style="padding-left: 30px;">之後以 SciTE 開啟 id_rsa.pub 後, 將此 public key 的內容, 以新增添加到 Github.com 帳號下 personal settings -&gt; SSH and GPG keys 頁面下.</p>
<p>3. 接下來要利用 puttygen.exe 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式, 並修改隨身系統的啟動批次檔案, 指定利用 putty 目錄下的 plink 執行 git 指令的網路代理設定.</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">修改啟動的 start.bat 加入下列設定:

set GIT_HOME=%Disk%:\portablegit\bin\
set GIT_SSH=%Disk%:\putty\plink.exe</pre>
<p>4. 利用 puttygen.exe 載入第二步驟所建立的 private key, 也就是 id_rsa.</p>
<p>開啟 puttygen 之後, 以右下方的 load 載入 id_rsa, 成功載入後, 利用 save private key 按鈕, 將已經轉為 putty 格式的 .ppk 存檔. 此一 .ppk 檔案必須在設定 putty 中 github.com session 時, 在 Connection-&gt;SSH-&gt;Auth 項目下, 將轉檔後的 .ppk 指向 private key file for authentication 欄位.</p>
<p>並在 Connection-&gt;Proxy 項目下, 指定 Proxy type: HTTP, 並將 IPv6 代理主機設為 ::53 或 ::42 埠號設為 3128.</p>
<p>5. 之後確定 home 下的 .ssh 目錄中的 config 設定檔案為:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false"># no proxy at home
#ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H proxy.mde.nfu.edu.tw:3128 %h %p
# set git_ssh=y:/putty/plink.exe with auth under putty github.com session setup
ProxyCommand y:/putty/plink.exe github.com %h %p
 
Host github.com
    User git
    Port 22
    Hostname github.com
    
    # for connect.exe need openssh key format
    #IdentityFile "y:\home\.ssh\id_rsa_mdecourse"
    # for plink.exe need rsa key format but set under putty github.com session
    # plink.exe do not need the following setting
    #IdentityFile "y:\home\.ssh\mdecourse_putty_private.ppk"
 
    TCPKeepAlive yes
    IdentitiesOnly yes
</pre>
<p>6. 最後再將 wcmj2020 倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線: 範例如下:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">[core]
	repositoryformatversion = 0
	filemode = false
	bare = false
	logallrefupdates = true
	symlinks = false
	ignorecase = true
[submodule]
	active = .
[remote "origin"]
	#url = https://github.com/mdecourse/wcmj2020.git
    url = git@github.com:mdecourse/wcmj2020.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
	remote = origin
	merge = refs/heads/master
[submodule "cmsimde"]
	url = https://github.com/mdecourse/cmsimde.git</pre>
<p>之後就可以透過近端的 .ppk private key 與 Github.com 上的 public key 對應, 無需輸入帳號密碼就可以進行 git push.</p>
<h1>W12</h1>
<p>用 Virtualbox 建立ubuntu</p>
<p><b>前面步驟為安裝設定重點為ipv4及ipv6網路設定都為自動</b><br/><b></b></p>
<p><b>進入介面後，再輸入指令</b></p>
<p><b>設定網域</b></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">sudo vi 00-installer-config.yaml</pre>
<p><b></b> <strong>輸入指令</strong></p>
<p><strong>網路部分設定</strong></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">sudo netplan apply</pre>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">ping4 140.130.15.254</pre>
<p><b></b><b>安裝pip3</b></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">sudo apt install net-tools</pre>
<p></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">sudo apt update</pre>
<p></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">sudo apt install python3-pip</pre>
<p><b>利用pip3安裝flask flask_cors bs4 lxml markdown</b></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">sudo pip3 install flask flask_cors bs4 lxml markdown</pre>
<p><strong>建立github資料夾</strong></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">mkdir github</pre>
<p><strong>安裝桌面</strong></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">sudo apt install xorg</pre>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">sudo apt install fluxbox</pre>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">sudo apt install lxde</pre>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/D7llxFAGAsw" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/yl_n4TmiatI" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/PzSosblmtxw" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/rUCiE53VSCY" width="560"></iframe></p>
<h1>W13</h1>
<p>用硬碟<span>建立ubuntu的虛擬主機</span></p>
<p>各分組嘗試建立 wcm1.kmol.info ~ wcm4.kmol.info 等實體主機.</p>
<p>IP 將分別設為 ~17:2020::2 至 ~<span>17:2020::5</span></p>
<p><span>符號名稱分別為: wcm1.kmol.info ～ wcm4.kmol.info</span></p>
<p><span>安裝 NGINX WWW Server:</span></p>
<p><span>sudo apt install nginx</span></p>
<p><span>nginx 設定檔案位於 /etc/nginx/nginx.conf 可用於配置 CMSiMDE 靜態網頁<br/></span></p>
<p><span>若在純 IPv6 下需要設定 Proxy, 則在 /etc/apt/apt.conf.d 中需要新增 proxy.conf, 內容如下:</span></p>
<p><span>Acquire::http::Proxy "http://[proxy_ip_address]:3128";</span></p>
<p><span>設定時區:</span></p>
<p><span>sudo timedatectl set-timezone Aia/Taipei</span></p>
<h1>W14</h1>
<p>Ubuntu 20.04 編譯 NGINX</p>
<h1>W15</h1>
<p>利用 Pypdf2 切割 pdf </p>
<p>利用 HxD 編修 pip.exe</p>
<h2>pypdf2_ex1.py</h2>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># pypdf2_ex2.py
import os
from PyPDF2 import PdfFileWriter, PdfFileReader
 
pdfReader = PdfFileReader(open("ProblemSolvingwithAlgorithmsandDataStructures.pdf", "rb"))
information = [("text",1,10),("text2",11,20),("text3",21,30)]
 
for page in range(len(information)):
    pdf_writer = PdfFileWriter()
    start = information[page][1]
    end = information[page][2]
    while start&lt;=end:
        pdf_writer.addPage(pdfReader.getPage(start-1))
        start+=1
    if not os.path.exists("./"):
        os.makedirs(savepath)
    output_filename = '{}_{}_page_{}.pdf'.format(information[page][0],information[page][1], information[page][2])
    with open(output_filename,'wb') as out:
        pdf_writer.write(out)</pre>
<h2>pypdf2_ex2.py</h2>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># pypdf2_ex1.py
import os
from PyPDF2 import PdfFileWriter, PdfFileReader
 
pdfReader = PdfFileReader(open("ProblemSolvingwithAlgorithmsandDataStructures.pdf", "rb"))
information = [("text",1,10)]
 
for page in range(len(information)):
    pdf_writer = PdfFileWriter()
    start = information[page][1]
    end = information[page][2]
    while start&lt;=end:
        pdf_writer.addPage(pdfReader.getPage(start-1))
        start+=1
    if not os.path.exists("./"):
        os.makedirs(savepath)
    output_filename = '{}_{}_page_{}.pdf'.format(information[page][0],information[page][1], information[page][2])
    with open(output_filename,'wb') as out:
        pdf_writer.write(out)</pre>
<h2>pypdf2_ex3.py</h2>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># pypdf2_ex3.py
# merge several pdf files
import sys
import PyPDF2
 
pdf_write_object = PyPDF2.PdfFileWriter()
 
#for i in sys.argv[1:]:
for i in ["text_1_page_10.pdf","text2_11_page_20.pdf","text3_21_page_30.pdf"]:
    pdf_read_object = PyPDF2.PdfFileReader(i)
    print('processing file : '+ i + 'number of pages : ' +  str(pdf_read_object.numPages))
    for page in range(pdf_read_object.numPages):
        pdf_write_object.addPage(pdf_read_object.getPage(page))
 
final_file_object = open('2020CMS.pdf', 'wb')
pdf_write_object.write(final_file_object)
final_file_object.close()</pre>
<h2>pypdf2_ex23.py</h2>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import os
import sys
import PyPDF2
from PyPDF2 import PdfFileWriter, PdfFileReader

pdfReader = PdfFileReader(open("ProblemSolvingwithAlgorithmsandDataStructures.pdf", "rb"))
information = [("text",1,10),("text2",11,20),("text3",21,30)]
 
for page in range(len(information)):
    pdf_writer = PdfFileWriter()
    start = information[page][1]
    end = information[page][2]
    while start&lt;=end:
        pdf_writer.addPage(pdfReader.getPage(start-1))
        start+=1
    if not os.path.exists("./"):
        os.makedirs(savepath)
    output_filename = '{}_{}_page_{}.pdf'.format(information[page][0],information[page][1], information[page][2])
    with open(output_filename,'wb') as out:
        pdf_writer.write(out)
    
    pdf_write_object = PyPDF2.PdfFileWriter()
 
#for i in sys.argv[1:]:
for i in ["text_1_page_10.pdf","text2_11_page_20.pdf","text3_21_page_30.pdf"]:
    pdf_read_object = PyPDF2.PdfFileReader(i)
    print('processing file : '+ i + 'number of pages : ' +  str(pdf_read_object.numPages))
    for page in range(pdf_read_object.numPages):
        pdf_write_object.addPage(pdf_read_object.getPage(page))
 
final_file_object = open('2020CMS.pdf', 'wb')
pdf_write_object.write(final_file_object)
final_file_object.close()</pre>
<h1>W16</h1>
<p>cd2020pj1 網際程式開發說明</p>
<h1>W17</h1>
<p>cd2020pj1 pdf 網際分割與合併程式說明</p>
<br/><br/>W18<br/><br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/BfReeoUSCHE" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ht9JvvTXKBM" width="560"></iframe> <br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/D7llxFAGAsw" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/yl_n4TmiatI" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/PzSosblmtxw" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/rUCiE53VSCY" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/_XyPkUIpHgI" width="560"></iframe>