var tipuesearch = {"pages": [{'title': 'W1', 'text': '下載 Download Windows x86-64 executable installer 準備安裝 3.8.2 python 解譯器,下載 full 64-bit download, 解開壓縮檔案, 就是可以直接執行的 Scite.exe 編輯器,將安裝的 Python38 目錄以及 Scite 目錄搬入 c:\\wcm2020\\data 目錄中, 然後藉由Scite.exe 建立 stop.bat 與 start.bat \n \n', 'tags': '', 'url': 'W1.html'}, {'title': 'W2-W4', 'text': '利用 get-pip.py 在 W1 所完成的 可擕系統安裝 pip,後設定 start.bat和pacman.conf和wgetrc 等兩個檔案,修改完成後, 重新開啟 msys64 目錄下的 mingw64.exe 後, 就可以透過 IPv6 的 proxy server 執行 package 更新 \n \n', 'tags': '', 'url': 'W2-W4.html'}, {'title': 'W6', 'text': '準備一個 webcam，以應後續 online 上課及拍攝操作影片所需,都能在 YouTube 直播加上OBS 串流模式下，將電腦桌面疊上直播者的 webcam 畫面製作 \n \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W7', 'text': '用meet\xa0 testing 進行線上直播, \n', 'tags': '', 'url': 'W7.html'}, {'title': 'W8', 'text': '用meet\xa0 testing 進行線上直播, \n', 'tags': '', 'url': 'W8.html'}, {'title': 'W9', 'text': '期中考 \n \n', 'tags': '', 'url': 'W9.html'}, {'title': 'W10', 'text': '介紹PYTHON 程式 \n', 'tags': '', 'url': 'W10.html'}, {'title': 'W11', 'text': '建立ssh \n \n 1. 下載 Putty 工具組 \n 從  https://www.chiark.greenend.org.uk/~sgtatham/putty/   下載一般版, 或從   http://jakub.kotrla.net/putty/   下載特殊的可攜版本. \n 2. 利用 y:\\portablegit\\bin\\sh.exe 進入 shell 命令環境後, 以  \n  ssh-keygen -t rsa -b 4096 -C "使用者學號" \n 在 /y/home/.ssh 目錄下建立 id_rsa 與 id_rsa.pub 等 private key 與 public key \n 之後以 SciTE 開啟 id_rsa.pub 後, 將此 public key 的內容, 以新增添加到 Github.com 帳號下 personal settings -> SSH and GPG keys 頁面下. \n 3. 接下來要利用 puttygen.exe 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式, 並修改隨身系統的啟動批次檔案, 指定利用 putty 目錄下的 plink 執行 git 指令的網路代理設定. \n 修改啟動的 start.bat 加入下列設定:\n\nset GIT_HOME=%Disk%:\\portablegit\\bin\\\nset GIT_SSH=%Disk%:\\putty\\plink.exe \n 4. 利用 puttygen.exe 載入第二步驟所建立的 private key, 也就是 id_rsa. \n 開啟 puttygen 之後, 以右下方的 load 載入 id_rsa, 成功載入後, 利用 save private key 按鈕, 將已經轉為 putty 格式的 .ppk 存檔. 此一 .ppk 檔案必須在設定 putty 中 github.com session 時, 在 Connection->SSH->Auth 項目下, 將轉檔後的 .ppk 指向 private key file for authentication 欄位. \n 並在 Connection->Proxy 項目下, 指定 Proxy type: HTTP, 並將 IPv6 代理主機設為 ::53 或 ::42 埠號設為 3128. \n 5. 之後確定 home 下的 .ssh 目錄中的 config 設定檔案為: \n # no proxy at home\n#ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H proxy.mde.nfu.edu.tw:3128 %h %p\n# set git_ssh=y:/putty/plink.exe with auth under putty github.com session setup\nProxyCommand y:/putty/plink.exe github.com %h %p\n \nHost github.com\n    User git\n    Port 22\n    Hostname github.com\n    \n    # for connect.exe need openssh key format\n    #IdentityFile "y:\\home\\.ssh\\id_rsa_mdecourse"\n    # for plink.exe need rsa key format but set under putty github.com session\n    # plink.exe do not need the following setting\n    #IdentityFile "y:\\home\\.ssh\\mdecourse_putty_private.ppk"\n \n    TCPKeepAlive yes\n    IdentitiesOnly yes\n \n 6. 最後再將 wcmj2020 倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線: 範例如下: \n [core]\n\trepositoryformatversion = 0\n\tfilemode = false\n\tbare = false\n\tlogallrefupdates = true\n\tsymlinks = false\n\tignorecase = true\n[submodule]\n\tactive = .\n[remote "origin"]\n\t#url = https://github.com/mdecourse/wcmj2020.git\n    url = git@github.com:mdecourse/wcmj2020.git\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n[branch "master"]\n\tremote = origin\n\tmerge = refs/heads/master\n[submodule "cmsimde"]\n\turl = https://github.com/mdecourse/cmsimde.git \n 之後就可以透過近端的 .ppk private key 與 Github.com 上的 public key 對應, 無需輸入帳號密碼就可以進行 git push. \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12', 'text': '用 Virtualbox 建立ubuntu \n 前面步驟為安裝設定重點為ipv4及ipv6網路設定都為自動 \n 進入介面後，再輸入指令 \n 設定網域 \n sudo vi 00-installer-config.yaml \n   輸入指令 \n 網路部分設定 \n sudo netplan apply \n ping4 140.130.15.254 \n 安裝pip3 \n sudo apt install net-tools \n \n sudo apt update \n \n sudo apt install python3-pip \n 利用pip3安裝flask flask_cors bs4 lxml markdown \n sudo pip3 install flask flask_cors bs4 lxml markdown \n 建立github資料夾 \n mkdir github \n 安裝桌面 \n sudo apt install xorg \n sudo apt install fluxbox \n sudo apt install lxde \n \n', 'tags': '', 'url': 'W12.html'}, {'title': 'W13', 'text': '用硬碟 建立ubuntu的虛擬主機 \n 各分組嘗試建立 wcm1.kmol.info ~ wcm4.kmol.info 等實體主機. \n IP 將分別設為 ~17:2020::2 至 ~ 17:2020::5 \n 符號名稱分別為: wcm1.kmol.info ～ wcm4.kmol.info \n 安裝 NGINX WWW Server: \n sudo apt install nginx \n nginx 設定檔案位於 /etc/nginx/nginx.conf 可用於配置 CMSiMDE 靜態網頁 \n 若在純 IPv6 下需要設定 Proxy, 則在 /etc/apt/apt.conf.d 中需要新增 proxy.conf, 內容如下: \n Acquire::http::Proxy "http://[proxy_ip_address]:3128"; \n 設定時區: \n sudo timedatectl set-timezone Aia/Taipei \n', 'tags': '', 'url': 'W13.html'}, {'title': 'W14', 'text': 'Ubuntu 20.04 編譯 NGINX \n', 'tags': '', 'url': 'W14.html'}, {'title': 'W15', 'text': '利用 Pypdf2 切割 pdf\xa0 \n 利用 HxD 編修 pip.exe \n', 'tags': '', 'url': 'W15.html'}, {'title': 'pypdf2_ex1.py', 'text': '# pypdf2_ex2.py\nimport os\nfrom PyPDF2 import PdfFileWriter, PdfFileReader\n \npdfReader = PdfFileReader(open("ProblemSolvingwithAlgorithmsandDataStructures.pdf", "rb"))\ninformation = [("text",1,10),("text2",11,20),("text3",21,30)]\n \nfor page in range(len(information)):\n    pdf_writer = PdfFileWriter()\n    start = information[page][1]\n    end = information[page][2]\n    while start<=end:\n        pdf_writer.addPage(pdfReader.getPage(start-1))\n        start+=1\n    if not os.path.exists("./"):\n        os.makedirs(savepath)\n    output_filename = \'{}_{}_page_{}.pdf\'.format(information[page][0],information[page][1], information[page][2])\n    with open(output_filename,\'wb\') as out:\n        pdf_writer.write(out) \n', 'tags': '', 'url': 'pypdf2_ex1.py.html'}, {'title': 'pypdf2_ex2.py', 'text': '# pypdf2_ex1.py\nimport os\nfrom PyPDF2 import PdfFileWriter, PdfFileReader\n \npdfReader = PdfFileReader(open("ProblemSolvingwithAlgorithmsandDataStructures.pdf", "rb"))\ninformation = [("text",1,10)]\n \nfor page in range(len(information)):\n    pdf_writer = PdfFileWriter()\n    start = information[page][1]\n    end = information[page][2]\n    while start<=end:\n        pdf_writer.addPage(pdfReader.getPage(start-1))\n        start+=1\n    if not os.path.exists("./"):\n        os.makedirs(savepath)\n    output_filename = \'{}_{}_page_{}.pdf\'.format(information[page][0],information[page][1], information[page][2])\n    with open(output_filename,\'wb\') as out:\n        pdf_writer.write(out) \n', 'tags': '', 'url': 'pypdf2_ex2.py.html'}, {'title': 'pypdf2_ex3.py', 'text': '# pypdf2_ex3.py\n# merge several pdf files\nimport sys\nimport PyPDF2\n \npdf_write_object = PyPDF2.PdfFileWriter()\n \n#for i in sys.argv[1:]:\nfor i in ["text_1_page_10.pdf","text2_11_page_20.pdf","text3_21_page_30.pdf"]:\n    pdf_read_object = PyPDF2.PdfFileReader(i)\n    print(\'processing file : \'+ i + \'number of pages : \' +  str(pdf_read_object.numPages))\n    for page in range(pdf_read_object.numPages):\n        pdf_write_object.addPage(pdf_read_object.getPage(page))\n \nfinal_file_object = open(\'2020CMS.pdf\', \'wb\')\npdf_write_object.write(final_file_object)\nfinal_file_object.close() \n', 'tags': '', 'url': 'pypdf2_ex3.py.html'}, {'title': 'pypdf2_ex23.py', 'text': 'import os\nimport sys\nimport PyPDF2\nfrom PyPDF2 import PdfFileWriter, PdfFileReader\n\npdfReader = PdfFileReader(open("ProblemSolvingwithAlgorithmsandDataStructures.pdf", "rb"))\ninformation = [("text",1,10),("text2",11,20),("text3",21,30)]\n \nfor page in range(len(information)):\n    pdf_writer = PdfFileWriter()\n    start = information[page][1]\n    end = information[page][2]\n    while start<=end:\n        pdf_writer.addPage(pdfReader.getPage(start-1))\n        start+=1\n    if not os.path.exists("./"):\n        os.makedirs(savepath)\n    output_filename = \'{}_{}_page_{}.pdf\'.format(information[page][0],information[page][1], information[page][2])\n    with open(output_filename,\'wb\') as out:\n        pdf_writer.write(out)\n    \n    pdf_write_object = PyPDF2.PdfFileWriter()\n \n#for i in sys.argv[1:]:\nfor i in ["text_1_page_10.pdf","text2_11_page_20.pdf","text3_21_page_30.pdf"]:\n    pdf_read_object = PyPDF2.PdfFileReader(i)\n    print(\'processing file : \'+ i + \'number of pages : \' +  str(pdf_read_object.numPages))\n    for page in range(pdf_read_object.numPages):\n        pdf_write_object.addPage(pdf_read_object.getPage(page))\n \nfinal_file_object = open(\'2020CMS.pdf\', \'wb\')\npdf_write_object.write(final_file_object)\nfinal_file_object.close() \n', 'tags': '', 'url': 'pypdf2_ex23.py.html'}, {'title': 'W16', 'text': 'cd2020pj1 網際程式開發說明 \n', 'tags': '', 'url': 'W16.html'}, {'title': 'W17', 'text': 'cd2020pj1 pdf 網際分割與合併程式說明 \n', 'tags': '', 'url': 'W17.html'}, {'title': 'W18', 'text': ' ', 'tags': '', 'url': 'W18.html'}]};